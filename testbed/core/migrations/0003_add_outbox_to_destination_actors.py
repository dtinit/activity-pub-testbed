# Generated by Django 5.1.3 on 2025-06-22 16:17

from django.db import migrations
import logging

logger = logging.getLogger(__name__)

def create_outboxes_for_destination_actors(apps, schema_editor):
    Actor = apps.get_model('core', 'Actor')
    PortabilityOutbox = apps.get_model('core', 'PortabilityOutbox')
    CreateActivity = apps.get_model('core', 'CreateActivity')
    
    destination_actors = Actor.objects.filter(role='destination')
    
    for actor in destination_actors:
        try:
            outbox = PortabilityOutbox.objects.get(actor=actor)
            continue
        except PortabilityOutbox.DoesNotExist:
            try:
                outbox = PortabilityOutbox.objects.create(actor=actor)
                
                activity = CreateActivity.objects.create(
                    actor=actor,
                    visibility="public",
                )
                
                outbox.activities_create.add(activity)
                
                logger.info(f"Created outbox for destination actor {actor.username}")
            except Exception as e:
                logger.error(f"Error creating outbox for destination actor {actor.username}: {e}")


def reverse_func(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_oauthconnection'),
    ]

    operations = [
        migrations.RunPython(create_outboxes_for_destination_actors, reverse_func),
    ]
